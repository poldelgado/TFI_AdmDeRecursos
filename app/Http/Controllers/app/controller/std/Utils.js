/*
 * File: app/controller/std/Utils.js
 *
 * This file was generated by Sencha Architect version 4.2.3.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.5.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.5.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('app.controller.std.Utils', {
    extend: 'Ext.app.Controller',
    alias: 'controller.utils',

    statics: {
        getCuit: function(sexo,numdoc) {
            var tipo =20;
            if(sexo==='F'){
                tipo = 27;
            }

            var rest = getRest(tipo,numdoc);

            if (rest > 1) {
                rest = 11 - rest;
            }else{
                tipo = 23;
                rest = getRest(tipo,numdoc);
                if (rest > 1) {
                    rest = 11 - rest;
                }else{
                    console.log('NO ES POSIBLE CALCULAR EL CUIT');
                }

            }
            var cuit = tipo.toString()+numdoc+rest;
            console.log(cuit);
            return cuit;

            function getRest(tipo,dni){
                var pad = '00000000';
                dni = (pad + dni).slice(-pad.length);
                var cuit = tipo.toString()+dni.toString();
                var coef = '5432765432', suma = 0, rest = 0;
                if (cuit) {
                    for (var ix = 0; ix <= 9; ix++){
                        suma = suma + (parseInt(cuit.substr(ix, 1)) * parseInt(coef.substr(ix, 1)));
                    }
                }
                return Math.round((suma / 11 - parseInt(suma / 11)) * parseFloat(11));
            }
        }
    },

    control: {
        "cuit": {
            keyup: 'CUIT'
        }
    },

    CUIT: function(textfield, e, eOpts) {
        console.log('control cuit');
        textfield.getValue = function (){
            var a = this,
                b = a.rawToValue(a.processRawValue(a.getRawValue()));
            b = b.replace(/-/g,'');
            a.value = b;
            return b;
        };

        var rawValue = textfield.getRawValue();
        var cuit = textfield.getValue();

        if (cuit.length===11){

            var coef = '5432765432', suma = 0, rest = 0;

            if (cuit) {

                for (var ix = 0; ix <= 9; ix++){
                    suma = suma + (parseInt(cuit.substr(ix, 1)) * parseInt(coef.substr(ix, 1)));
                }
            }

            rest = Math.round((suma / 11 - parseInt(suma / 11)) * parseFloat(11));
            var digitover  = cuit.substr( 10, 1);

            if (rest > 1) {
                rest = 11 - rest;
            }

            if (rest != digitover) {
                textfield.setValue('');
                Ext.Msg.show({
                    title:'',
                    msg: 'El CUIT ingresado no es valido..',
                    buttons: Ext.Msg.OK,
                    icon: Ext.Msg.ERROR,
                });
            }
            else {
                var strCuit =cuit.substr(0, 2)+'-'+cuit.substr(2,8)+'-'+cuit.substr(10,1);
                textfield.setRawValue(strCuit);
            }
        }else if(cuit.length>=11){
            textfield.setValue('');
            Ext.Msg.show({
                title:'',
                msg: 'El CUIT ingresado no es valido..',
                buttons: Ext.Msg.OK,
                icon: Ext.Msg.ERROR,
            });

        }else if(rawValue.length > 11 &&rawValue.length < 13){
            textfield.setValue('');
            Ext.Msg.show({
                title:'',
                msg: 'El CUIT ingresado no es valido..',
                buttons: Ext.Msg.OK,
                icon: Ext.Msg.ERROR,
            });


        }
    }

});
