/*
 * File: app/controller/std/Glob.js
 *
 * This file was generated by Sencha Architect version 4.2.3.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.5.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.5.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('app.controller.std.Glob', {
    extend: 'Ext.app.Controller',
    alias: 'controller.stdGlob',

    requires: [
        'Ext.window.Toast'
    ],

    statics: {
        ajax: function(metodo, params, sData) {
            var data = sData,
                aux = [];
            if (sData && sData.model) {
                var fields = sData.model.getFields();
                data = Ext.pluck(sData.data.items, 'data');

                for (var i = 0; i < data.length; i++) {
                    var obj = data[i],
                        oAux = {};
                    for (var key in obj) {
                        for (f in fields) {
                            if (fields[f].name === key && fields[f].persist && fields[f].name !== 'id') {
                                oAux[key] = obj[key];
                            }
                        }

                    }
                    aux.push(oAux);
                }
                data = aux;
            }

            var strData = null;
            if (data) {
                if (data.constructor === "".constructor) {
                    strData = data;

                } else {
                    strData = Ext.JSON.encode(data);
                }
            }

            var strPar = null;
            if (params) {
                if (params.constructor === "".constructor) {
                    strPar = params;
                } else {
                    strPar = Ext.JSON.encode(params);
                }
            }
            var out = "nada",
                sOk = showOk;

            var async = false;
            if(funct){
                async = true;
            }

            Ext.Ajax.request({
                url: 'public/',
                async: async,
                params: {
                    paquete: paquete,
                    clase: clase,
                    metodo: metodo,
                    data: strData,
                    parametros: strPar
                },
                headers: {
                    'Accept': 'application/json'
                },

                callback: function(options, success, response) {
                    var msg = '';
                    var resp = response.responseText;
                    out = resp;
                    if (resp.constructor === "".constructor) {
                        out = Ext.JSON.decode(resp);

                        if (out && out.success) {
                            msg = out.msg ? out.msg : 'La operacion se ha completado exitosamente';
                        } else {
                            if (out.msg === 'Acceso Denegado') {

                                Ext.toast({
                                    html: 'SesiÃ³n caducada',
                                    title: 'Aviso',
                                    width: 200,
                                    align: 't',
                                    autoClose: true
                                });


                                Ext.widget('login').show();
                            } else {
                                msg = out.msg ? out.msg : 'La operacion no se pudo completar';
                            }

                            if (sOk) {
                                Ext.Msg.alert('Aviso', msg);
                            }
                            if(funct){
                                funct();
                            }
                        }
                    }

                    if (showOk && msg) {

                        if(showOk==='ERR'){
                            if(!success){

                                Ext.toast({
                                    html: msg,
                                    title: 'Aviso',
                                    width: 200,
                                    align: 't',
                                    autoClose: true
                                });


                            }
                        }else{

                            Ext.toast({
                                html: msg,
                                title: 'Aviso',
                                width: 200,
                                align: 't',
                                autoClose: true
                            });


                        }


                    }
                }
            });
            return out;
        },

        getDataGrid: function(grid) {
            var aux = [];
            var fields = grid.store.model.getFields(),
                data = Ext.pluck(grid.store.data.items, 'data');

            for (var i = 0; i < data.length; i++) {
                var obj = data[i],
                    oAux = {};
                for (var key in obj) {
                    for (f in fields) {
                        if (fields[f].name === key && fields[f].persist && fields[f].name !== 'id') {
                            oAux[key] = obj[key];
                        }
                    }
                }
                aux.push(oAux);
            }
            data = aux;

            return data;
        }
    }
});
