/*
 * File: app/view/reportes/RepPve.js
 *
 * This file was generated by Sencha Architect version 4.2.3.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.5.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.5.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('app.view.reportes.RepPve', {
    extend: 'Ext.container.Container',
    alias: 'widget.RepPve',

    requires: [
        'Ext.chart.PolarChart',
        'Ext.chart.series.Pie3D',
        'Ext.chart.interactions.Rotate',
        'Ext.chart.interactions.ItemHighlight',
        'Ext.chart.legend.Legend',
        'Ext.grid.Panel',
        'Ext.grid.column.Number',
        'Ext.view.Table'
    ],

    defaultListenerScope: true,

    layout: {
        type: 'vbox',
        align: 'stretch'
    },
    items: [
        {
            xtype: 'container',
            layout: {
                type: 'hbox',
                align: 'stretch'
            }
        },
        {
            xtype: 'container',
            flex: 1,
            layout: {
                type: 'hbox',
                align: 'stretch'
            },
            items: [
                {
                    xtype: 'container',
                    flex: 1,
                    layout: {
                        type: 'vbox',
                        align: 'stretch'
                    },
                    items: [
                        {
                            xtype: 'polar',
                            border: false,
                            flex: 1,
                            colors: [
                                '#115fa6',
                                '#94ae0a',
                                '#a61120',
                                '#ff8809',
                                '#ffd13e',
                                '#a61187',
                                '#24ad9a',
                                '#7c7474',
                                '#a66111'
                            ],
                            store: 'grafico1',
                            innerPadding: 60,
                            series: [
                                {
                                    type: 'pie3d',
                                    highlight: {
                                        'stroke-width': 40,
                                        stroke: '#fff'
                                    },
                                    label: {
                                        field: 'provider_name',
                                        display: 'rotate',
                                        font: '12px Arial'
                                    },
                                    tooltip: {
                                        trackMouse: true,
                                        renderer: function (tooltip, record, item) {
                                            tooltip.setHtml(record.get('provider_name')+': '+record.get('count'));
                                        }
                                    },
                                    angleField: 'count',
                                    donut: 30
                                }
                            ],
                            interactions: [
                                {
                                    type: 'rotate'
                                },
                                {
                                    type: 'itemhighlight'
                                }
                            ],
                            legend: {
                                xtype: 'legend'
                            }
                        }
                    ]
                },
                {
                    xtype: 'container',
                    flex: 0.7,
                    hidden: true,
                    layout: {
                        type: 'vbox',
                        align: 'stretch'
                    },
                    items: [
                        {
                            xtype: 'gridpanel',
                            flex: 1,
                            hidden: true,
                            scrollable: true,
                            title: 'Operaciones Liquidadas',
                            columns: [
                                {
                                    xtype: 'gridcolumn',
                                    width: 202,
                                    dataIndex: 'EntNom',
                                    text: 'Mes'
                                },
                                {
                                    xtype: 'numbercolumn',
                                    align: 'end',
                                    dataIndex: 'impApr',
                                    text: 'Importe'
                                },
                                {
                                    xtype: 'numbercolumn',
                                    align: 'end',
                                    dataIndex: 'cntApr',
                                    text: 'Cantidad',
                                    format: '0,000'
                                }
                            ],
                            listeners: {
                                afterrender: 'onGridpanelAfterRender'
                            }
                        }
                    ]
                }
            ]
        }
    ],

    onGridpanelAfterRender: function(component, eOpts) {
        /*console.log('aqui estoy');
        var store = Ext.create('Ext.data.Store', {

            fields: [
                {name:'EntNom'	},
                {name:'impApr'	},
                {name:'cntApr'	}

            ],
            proxy: {
                type: 'memory',
                reader: {
                    type: 'json',
                    rootProperty: 'data'
                }
            },
            autoLoad: false
        });


        var conte = component.up('solxcom'),
            polar = conte.down('polar');

        //polar.store = store;
        polar.bindStore(store);

        component.reconfigure(store);*/
    }

});