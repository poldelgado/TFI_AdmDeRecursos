/*
 * File: app/view/procesos/orden/NewOrden.js
 *
 * This file was generated by Sencha Architect version 4.2.3.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.5.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.5.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('app.view.procesos.orden.NewOrden', {
    extend: 'Ext.window.Window',
    alias: 'widget.neworden',

    requires: [
        'app.view.procesos.orden.NewOrdenViewModel',
        'app.view.std.form.Ent',
        'app.view.std.form.CUIT',
        'app.view.std.form.Txt',
        'Ext.form.Panel',
        'Ext.form.field.Number',
        'Ext.toolbar.Toolbar',
        'Ext.button.Button'
    ],

    viewModel: {
        type: 'neworden'
    },
    modal: true,
    width: 669,
    title: 'Nuevo/Editar',
    defaultListenerScope: true,

    layout: {
        type: 'vbox',
        align: 'stretch'
    },
    items: [
        {
            xtype: 'form',
            flex: 1,
            bodyPadding: 10,
            title: '',
            layout: {
                type: 'vbox',
                align: 'stretch'
            },
            items: [
                {
                    xtype: 'ent',
                    hidden: true,
                    labelWidth: 100,
                    name: 'id'
                },
                {
                    xtype: 'cuit',
                    labelWidth: 100,
                    flex: 1,
                    listeners: {
                        keyup: 'onTextfieldKeyup'
                    }
                },
                {
                    xtype: 'txt',
                    fieldLabel: 'Nombre',
                    labelWidth: 100,
                    name: 'name',
                    allowBlank: false
                },
                {
                    xtype: 'txt',
                    fieldLabel: 'EMail',
                    labelWidth: 100,
                    name: 'email',
                    allowBlank: false
                },
                {
                    xtype: 'txt',
                    fieldLabel: 'Telefono',
                    labelWidth: 100,
                    name: 'phone',
                    allowBlank: false
                },
                {
                    xtype: 'txt',
                    fieldLabel: 'DirecciÃ³n',
                    labelWidth: 100,
                    name: 'address',
                    allowBlank: false
                }
            ]
        }
    ],
    dockedItems: [
        {
            xtype: 'toolbar',
            dock: 'bottom',
            layout: {
                type: 'hbox',
                pack: 'end'
            },
            items: [
                {
                    xtype: 'button',
                    handler: function(button, e) {
                        var win  = button.up('window'),
                            frm  = win.down('form'),
                            val  = frm.getValues(),
                            ajax = app.controller.std.Glob.ajax;

                        if(frm.isValid()){
                            var metodo = 'POST';
                            if(val.id>0){
                                metodo = 'PUT';
                            }

                            var json = ajax(metodo, 'providers',val);
                            if(json.success){
                                Ext.Msg.alert('Aviso','Almacenamiento correcto');
                                win.close();
                            }
                        }else{
                            Ext.Msg.alert('Aviso','Antes de continuar debe completar los datos obligatorios');
                        }

                    },
                    text: 'Aceptar'
                }
            ]
        }
    ],

    onTextfieldKeyup: function(textfield, e, eOpts) {
        console.log('adfad----');
        var cuit = textfield.getValue();
        var rawValue = textfield.getRawValue();

        if (cuit.length===11){
            textfield.getValue = function (){
                var a = this,
                    b = a.rawToValue(a.processRawValue(a.getRawValue()));
                b = b.replace(/-/g,'');
                a.value = b;
                return b;
            };

            var rawValue = textfield.getRawValue(), cuit = textfield.getValue();


            var coef = '5432765432', suma = 0, rest = 0;

            if (cuit) {

                for (var ix = 0; ix <= 9; ix++){
                    suma = suma + (parseInt(cuit.substr(ix, 1)) * parseInt(coef.substr(ix, 1)));
                }
            }

            rest = Math.round((suma / 11 - parseInt(suma / 11)) * parseFloat(11));
            var digitover  = cuit.substr( 10, 1);

            if (rest > 1) {
                rest = 11 - rest;
            }

            if (rest != digitover) {
                textfield.setValue('');
                Ext.Msg.show({
                    title:'',
                    msg: 'El CUIT ingresado no es valido..',
                    buttons: Ext.Msg.OK,
                    icon: Ext.Msg.ERROR,
                });
            }
            else {
                var strCuit =cuit.substr(0, 2)+'-'+cuit.substr(2,8)+'-'+cuit.substr(10,1);
                textfield.setRawValue(strCuit);
            }
        }else if(cuit.length>=11){
            textfield.setValue('');
            Ext.Msg.show({
                title:'',
                msg: 'El CUIT ingresado no es valido..',
                buttons: Ext.Msg.OK,
                icon: Ext.Msg.ERROR,
            });

        }else if(rawValue.length > 11 &&rawValue.length < 13){
            textfield.setValue('');
            Ext.Msg.show({
                title:'',
                msg: 'El CUIT ingresado no es valido..',
                buttons: Ext.Msg.OK,
                icon: Ext.Msg.ERROR,
            });


        }
    }

});